group "org.polypheny"
description = "A lightweight Polypheny-DB benchmarking client"

def versionMajor = 4
def versionMinor = 2
def versionQualifier = "-SNAPSHOT"
version = versionMajor + "." + versionMinor + versionQualifier


buildscript {
    repositories {
        mavenCentral()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        // Shadowing; used to make a fat jar (https://github.com/johnrengelman/shadow)
        classpath group: "com.github.johnrengelman", name: "shadow", version: "8.1.1"
        // Lombok (https://plugins.gradle.org/plugin/io.freefair.lombok)
        classpath group: "io.freefair.gradle", name: "lombok-plugin", version: "8.4"
        // https://plugins.gradle.org/plugin/org.jetbrains.gradle.plugin.idea-ext
        classpath group: "gradle.plugin.org.jetbrains.gradle.plugin.idea-ext", name: "gradle-idea-ext", version: "1.1.7"
        // licensee plugin
        classpath group: "app.cash.licensee", name: "licensee-gradle-plugin", version: "1.8.0"
        // license report
        classpath group: "com.jaredsburrows", name: "gradle-license-plugin", version: "0.9.3"
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://clojars.org/repo/"
    }
}

apply plugin: "java-library"
apply plugin: "org.jetbrains.gradle.plugin.idea-ext"
apply plugin: "io.freefair.lombok"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "app.cash.licensee"
apply plugin: "com.jaredsburrows.license"


tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}


//configurations.all {
//    // check for updates every build
//    resolutionStrategy.cacheChangingModulesFor 0, "seconds"
//}


java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}


dependencies {
    // Commons
    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6' // License: Apache 2.0
    implementation group: 'commons-io', name: 'commons-io', version: '2.15.0'  // License: Apache 2.0

    // Polypheny Control Connector
    implementation group: 'org.polypheny', name: 'control-connector', version: '1.3.0'  // License: Apache 2.0

    // Chronos
    implementation group: 'org.chronos-eaas', name: 'chronos-agent', version: '2.4.1' // License: MIT

    // REST
    implementation group: 'com.konghq', name: 'unirest-java', version: '3.14.5' // License: MIT

    // JDBC Drivers
    implementation group: 'org.polypheny', name: 'polypheny-jdbc-driver', version: '1.5.3' // License: Apache 2.0
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0' // License: BSD-2-Clause License
    implementation group: 'monetdb', name: 'monetdb-jdbc', version: '3.3' // License: Mozilla Public License 2.0

    // Cottontail-DB
    //implementation group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.36' // License: MIT
    implementation(group: 'org.vitrivr', name: 'cottontaildb', version: '0.10.5') { // License: MIT
        exclude group: 'org.apache.logging.log4j'
        exclude group: 'org.slf4j'
    }

    // CLI library
    implementation group: 'com.github.rvesse', name: 'airline', version: '2.9.0' // License: Apache 2.0

    // Fake data generator
    implementation group: 'com.devskiller', name: 'jfairy', version: '0.6.5' // License: Apache 2.0

    // Video processing
    implementation group: 'org.jcodec', name: 'jcodec', version: '0.2.5' // License: BSD-2-Clause License
    implementation group: 'org.jcodec', name: 'jcodec-javase', version: '0.2.5' // License: BSD-2-Clause License

    // CSV
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.8' // License: Apache 2.0

    // JSON
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1' // License: Apache 2.0

    // Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.9' // License: MIT
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl', version: '2.21.1' // License: Apache 2.0
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.21.1' // License: Apache 2.0
    //annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.21.1' // License: Apache 2.0

    // Extracting ZIPs
    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.11.5' // License: Apache 2.0


    // --- Testing ---
    //testImplementation group: 'junit', name: 'junit', version: '4.13.2'
}


/**
 * License check
 */
licensee {
    // Category A
    allow('Apache-2.0')
    allow('MIT')
    allow('BSD-2-Clause')
    allow('BSD-3-Clause')

    allowDependency('aopalliance', 'aopalliance', '1.0') { because 'Public Domain' }
    allowDependency('javax.annotation', 'javax.annotation-api', '1.2') { because 'CDDL license' }
    allowDependency('org.jcodec', 'jcodec', '0.2.5') { because 'BSD 2-Clause' }
    allowDependency('org.jcodec', 'jcodec-javase', '0.2.5') { because 'BSD 2-Clause' }
    allowDependency('org.java-websocket', 'Java-WebSocket', '1.5.3') { because 'MIT License' }
    allowDependency('org.bouncycastle', 'bcpkix-jdk15on', '1.61') { because 'MIT License' }
    allowDependency('org.bouncycastle', 'bcprov-jdk15on', '1.61') { because 'MIT License' }
    allowDependency('org.postgresql', 'postgresql', '42.6.0') { because 'BSD 2-Clause' }
    allowDependency('org.vitrivr', 'cottontaildb', '0.10.5') { because 'MIT License' }
    allowDependency('org.vitrivr', 'cottontaildb-proto', '0.10.3') { because 'MIT License' }
    allowDependency('com.google.re2j', 're2j', '1.2') { because 'BSD 3-Clause' }

    // Category B
    allow('EPL-1.0')
    allow('MPL-2.0')
}


javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption("html5", true)
    }
    // suppress most of the warnings
    options.addStringOption("Xdoclint:none", "-quiet")
    // Include private fields in JavaDoc
    options.memberLevel = JavadocMemberLevel.PRIVATE

    options.setOutputLevel(JavadocOutputLevel.QUIET)
    options.quiet()
}


/**
 * JARs
 */
jar {
    manifest {
        attributes "Manifest-Version": "1.0"
        attributes "Copyright": "The Polypheny Project (polypheny.org)"
        attributes "Version": project.version
        attributes "Main-Class": "org.polypheny.simpleclient.cli.Main"
        attributes "Multi-Release": "true"
        attributes "Implementation-Version": project.version
    }
}/*
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier "sources"
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}*/
shadowJar {
    zip64 true
    archiveClassifier.set('')
    mergeServiceFiles {
        setPath("META-INF/services")
        include("io.grpc.*")
    }
}
assemble.dependsOn shadowJar
artifacts {
    //archives jar // regular jar containing only the compiled source
    archives shadowJar // fat jar which additionally contains all dependencies
    //archives sourcesJar // jar file containing the java doc files
    //archives javadocJar // jar file containing the source files
}


/**
 * IntelliJ
 */
idea {
    module {
        downloadJavadoc = true
        downloadSources = true

        inheritOutputDirs = false
        outputDir = file("${project.buildDir}/classes")
        testOutputDir = file("${project.buildDir}/test-classes")
    }
    project {
        settings {
            copyright {
                useDefault = "MITLicense"
                profiles {
                    MITLicense {
                        notice = 'The MIT License (MIT)\n' +
                                '\n' +
                                'Copyright (c) 2019-$today The Polypheny Project\n' +
                                '\n' +
                                'Permission is hereby granted, free of charge, to any person obtaining a\n' +
                                'copy of this software and associated documentation files (the "Software"), to deal\n' +
                                'in the Software without restriction, including without limitation the rights\n' +
                                'to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n' +
                                'copies of the Software, and to permit persons to whom the Software is\n' +
                                'furnished to do so, subject to the following conditions:\n' +
                                '\n' +
                                'The above copyright notice and this permission notice shall be included in all\n' +
                                'copies or substantial portions of the Software.\n' +
                                '\n' +
                                'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n' +
                                'IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n' +
                                'FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n' +
                                'AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n' +
                                'LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n' +
                                'OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n' +
                                'SOFTWARE.'
                        keyword = "Copyright"
                    }
                }
            }
        }
    }
}
